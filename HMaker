#!/usr/bin/python

import os
import sys
import string

path = os.getcwd() + '/' + sys.argv[1]
name = os.getcwd() + '/' + sys.argv[2]
ifndefname = name[name.rfind("/") + 1 : -2].upper() + '_H'
shapka = "/* ************************************************************************** */\n/*                                                                            */\n/*                                                        :::      ::::::::   */\n/*   shapka                                             :+:      :+:    :+:   */\n/*                                                    +:+ +:+         +:+     */\n/*   By: bmiklaz <marvin@42.fr>                     +#+  +:+       +#+        */\n/*                                                +#+#+#+#+#+   +#+           */\n/*   Created: 2018/11/21 22:39:20 by bmiklaz           #+#    #+#             */\n/*   Updated: 2018/11/21 22:40:18 by bmiklaz          ###   ########.fr       */\n/*                                                                            */\n/* ************************************************************************** */\n"
functions = []
libs = set()
comment = False
longfunc = False
maxt = 0

fils = os.listdir(path)
with open(name, 'w') as f:
	f.write(shapka + '\n#ifndef ' + ifndefname + '\n# define ' + ifndefname + '\n')
for i in fils:
	if '.c' in i and i != 'main.c':
		print (i[:-2])
		functions.append([])
		with open(path + '/' + i) as prototip:
			prototip = prototip.read().split('\n')
			for j in prototip:
				if '/*' in j and '*/' in j:
					j = j[:j.find('/*')] + j[j.find('*/') + 2:]
				if longfunc:
					functions[-1][-1][1] += ' ' + j[j.rfind('\t') + 1:]
					if j[-1] == ')':
						longfunc = False
				if '/*' in j:
					comment = True
				if comment:
					if '*/' in j and not '/*' in j:
						j = j[j.rfind('*/') + 2:]
						comment = False
					else:
						continue
				if '#' in j and 'include' in j:
					libs.add(j[j.find('include') + 8:])
				elif j != '' and not j[0] in '/ \t\n{}#' and not 'static' in j and not 'main' in j and not 'g_' in j:
					functions[-1].append([j[:j.find('\t')], j[j.rfind('\t') + 1:]])
					if len(j[:j.find('\t')]) > maxt:
						maxt = len(j[:j.find('\t')])
					if j[-1] != ')':
						longfunc = True
for i in libs:
	with open(name, 'a') as f:
		f.write('# include ' + i + '\n')
with open(name, 'a') as f:
	f.write('\n');
for j in functions:
	for i in j:
		s = i[0] + '\t' * ((maxt + (maxt % 4)) / 4 - len(i[0]) / 4 + 1) + i[1] + ';\n'
		s = s.split(', ')
		if (maxt - (maxt % 4) + 8) + len(i[1]) + 1 > 80:
			while len(s[0]) + len(s[1]) + (maxt - (maxt % 4) + 8) + 1 - (maxt - (maxt % 4) + 8) / 4 <= 80:
				s[0] = s.pop(0) + ', ' + s[0]
			with open(name, 'a') as f:
				f.write(s.pop(0) + ',\n' + '\t' * (1 + (maxt + maxt % 4) / 4))
		with open(name, 'a') as f:
			f.write(', '.join(s))
	with open(name, 'a') as f:
		f.write('\n')
with open(name, 'a') as f:
	f.write('#endif\n')
